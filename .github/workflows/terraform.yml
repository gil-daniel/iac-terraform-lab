# Terraform CI Workflow for GitHub Actions
# ----------------------------------------
# This workflow:
# - Authenticates securely with Azure using a Service Principal stored as a GitHub secret
# - Formats, validates, and plans Terraform infrastructure
# - Allows manual approval to apply changes via workflow_dispatch
#
# ⚠️ Security Note:
# The Azure login step uses the official GitHub Action and does NOT expose credentials.
# The runner is ephemeral and destroyed after the job completes.
# The plan job uses -lock=false to avoid state lock errors in CI runs.
# The apply job runs only via manual dispatch and respects locking.
# Variable values are injected securely via GitHub Secrets.

name: Terraform CI

on:
  push:
    branches:
      - '**'
  pull_request:
  workflow_dispatch:

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (no lock)
        run: |
          terraform plan \
          -lock=false \
          -input=false \
          -var="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
          -var="admin_username=${{ secrets.ADMIN_USERNAME }}" \
          -var="ssh_public_key_content=${{ secrets.SSH_PUBLIC_KEY_CONTENT }}" \
          -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}" \
          -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
